{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","value","setValue","bReset","bInc","disable","setDisable","incClick","e","currentTarget","id","className","onClick","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAiCeA,MA7Bf,WAAgB,IAAD,EACaC,mBAAiB,GAD9B,mBACNC,EADM,KACCC,EADD,OAEiBF,mBAAqC,CAACG,QAAQ,EAAMC,MAAM,IAF3E,mBAENC,EAFM,KAEGC,EAFH,KAILC,EAAW,SAACC,GACa,MAAvBA,EAAEC,cAAcC,IAChBJ,EAAW,2BAAID,GAAL,IAAcF,QAAQ,KAChCD,EAAS,IACFD,EAAQ,IACfK,EAAW,2BAAID,GAAL,IAAcF,QAAQ,KAChCD,EAASD,EAAQ,KAI7B,OAEI,qBAAKU,UAAU,MAAf,SACI,sBAAKA,UAAW,YAAhB,UAEA,qBAAKA,UAAmB,IAARV,EAAU,kBAAkB,iBAA5C,SAA+DA,IAC3D,sBAAKU,UAAW,kBAAhB,UACJ,wBAASA,UAAmB,IAARV,EAAU,YAAY,SAAUS,GAAG,IAAIE,QAAS,SAACJ,GAAD,OAAOD,EAASC,IAAIK,SAAkB,IAARZ,EAAlG,iBACA,wBAAQU,UAAWN,EAAQF,OAAO,YAAY,SAAUO,GAAG,IAAIE,QAAS,SAACJ,GAAD,OAAOD,EAASC,IAAIK,SAAUR,EAAQF,OAA9G,0BCZOW,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9a0cae03.chunk.js","sourcesContent":["import React, {useState, MouseEvent} from 'react';\nimport './App.css';\n\n\nfunction App() {\n    let [value, setValue] = useState<number>(0);\n    let [disable, setDisable] = useState<{ [key: string]: boolean }>({bReset: true, bInc: false});\n\n    const incClick = (e: MouseEvent<HTMLButtonElement>) => {\n        if (e.currentTarget.id === '2') {\n            setDisable({...disable, bReset: true});\n            setValue(0)\n        } else if (value < 5) {\n            setDisable({...disable, bReset: false});\n            setValue(value + 1);\n        }\n}\n\nreturn (\n\n    <div className=\"App\">\n        <div className={'container'}>\n\n        <div className={value===5?'valueContainer5':'valueContainer'}>{value}</div>\n            <div className={'buttonContainer'}>\n        <button  className={value===5?'disButton':'button'} id=\"1\" onClick={(e) => incClick(e)} disabled={value===5?true:false}>inc</button>\n        <button className={disable.bReset?'disButton':'button'} id=\"2\" onClick={(e) => incClick(e)} disabled={disable.bReset}>res</button>\n            </div>\n        </div>\n    </div>\n);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}